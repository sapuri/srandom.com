# Generated by Django 3.2.7 on 2022-09-24 12:49

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=10, verbose_name='都道府県')),
            ],
            options={
                'verbose_name': '都道府県',
                'verbose_name_plural': '都道府県',
            },
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.CharField(max_length=255, verbose_name='テーマ')),
            ],
            options={
                'verbose_name': 'テーマ',
                'verbose_name_plural': 'テーマ',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('player_name', models.CharField(blank=True, help_text='全角ひらがなカタカナ英数字6文字以内', max_length=6, null=True, verbose_name='プレイヤー名')),
                ('poputomo_id', models.CharField(blank=True, help_text='半角数字12文字', max_length=12, null=True, verbose_name='ポプともID')),
                ('profile', models.TextField(blank=True, null=True, verbose_name='プロフィール')),
                ('player_name_privacy', models.IntegerField(default=1, help_text='ランキングにプレイヤー名とプロフィールページへのリンクが掲載されます。(非公開の場合は"匿名希望さん"と表示されます)', verbose_name='プレイヤー名')),
                ('cleardata_privacy', models.IntegerField(default=1, help_text='プロフィールページにクリアデータを表示します。', verbose_name='クリアデータ')),
                ('updated_recently_privacy', models.IntegerField(default=1, help_text='プロフィールページに最近更新した曲を表示します。', verbose_name='最近更新した曲')),
                ('premium', models.BooleanField(default=False, help_text='Amazonギフト券を買ってくれた人', verbose_name='プレミアムユーザー')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='users.location', verbose_name='都道府県')),
                ('theme', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='users.theme', verbose_name='テーマ')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
